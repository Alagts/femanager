name: testing
on: [push, pull_request]

jobs:
  php-lint:
    name: "PHP linter"
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2
      - name: "Run PHP lint"
        run: "composer test:php:lint"
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.2
          - 7.3
          - 7.4
  typoscript-lint:
    name: "TypoScript linter"
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Run TypoScript lint"
        uses: TYPO3-Continuous-Integration/TYPO3-CI-Typoscript-Lint@v1
        with:
          files: "./Configuration"
          config_file: ".project/tests/typoscript-lint.yml"
  yaml-lint:
    name: "YAML linter"
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Run YAML lint"
        uses: TYPO3-Continuous-Integration/TYPO3-CI-YAML-Lint@v1
  json-lint:
    name: "JSON linter"
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Run JSON lint"
        uses: TYPO3-Continuous-Integration/TYPO3-CI-JSON-Lint@v1
  php-cs-fixer:
    name: "PHP CS Fixer"
    runs-on: ubuntu-20.04
    needs: php-lint
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
      - name: "Composer Install"
        run: "composer install"
      - name: "Run PHP CS Fixer"
        run: "composer test:php:cs"
  unit-tests:
    name: "PHP Unit Tests"
    runs-on: ubuntu-20.04
    needs: php-lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2
      - name: "Composer Install"
        run: "composer install"
      - name: "Run Unit Tests"
        run: "composer test:unit"
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.2
          - 7.3
          - 7.4
  behaviour-tests:
    name: "PHP Behat Tests"
    runs-on: ubuntu-20.04
    needs: php-lint
    services:
      chrome:
        image: selenium/standalone-chrome-debug
      mariadb:
        image: mariadb:10.3
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: typo3
          MYSQL_PASSWORD: app
          MYSQL_USER: app
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2
      - name: "Composer Install"
        run: "composer install"
      - name: "Get database dump"
        run: "git lfs pull"
      - name: "Verify MariaDB connection"
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      - name: "Unzip db dump"
        run: "gzip -d .project/data/db.sql.gz"
      - name: "Import database to mariadb container"
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: "mysql -uroot -proot -P\"$PORT\" -h 127.0.0.1 typo3 < .project/data/db.sql"
      - name: "Set configuration"
        run: "cp .project/TYPO3/DockerConfiguration.php .Build/Web/typo3conf/AdditionalConfiguration.php"
      - name: "Install TYPO3"
        env:
          TYPO3_INSTALL_DB_DRIVER: mysqli
          TYPO3_INSTALL_DB_USER: app
          TYPO3_INSTALL_DB_PASSWORD: app
          TYPO3_INSTALL_DB_HOST: 127.0.0.1
          TYPO3_INSTALL_DB_PORT: ${{ job.services.mariadb.ports[3306] }}
          TYPO3_INSTALL_DB_UNIX_SOCKET: ""
          TYPO3_INSTALL_DB_USE_EXISTING: y
          TYPO3_INSTALL_DB_DBNAME: typo3
          TYPO3_INSTALL_ADMIN_USER: admin
          TYPO3_INSTALL_ADMIN_PASSWORD: password
          TYPO3_INSTALL_SITE_NAME: "FE Manager"
          TYPO3_INSTALL_SITE_SETUP_TYPE: no
          TYPO3_INSTALL_WEB_SERVER_CONFIG: apache
        run: "php .Build/bin/typo3cms install:setup"
      - name: "Run Behat Tests"
        run: "composer test:behaviour:docker"
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 7.2
          - 7.3
          - 7.4

